[
  {
    "key": "ctrl+w",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "ctrl+o",
    "command": "editor.action.organizeImports",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "key": "shift+alt+o",
    "command": "-editor.action.organizeImports",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "key": "ctrl+q",
    "command": "editor.emmet.action.removeTag"
  },
  {
    "key": "ctrl+f12",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile"
  },

  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "workbench.action.splitEditor"
  },

  {
    "key": "ctrl+l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+alt+f",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "ctrl+alt+f",
    "command": "-repl.action.find",
    "when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
  },
  {
    "key": "ctrl+alt+f",
    "command": "-list.find.replInputFocus",
    "when": "view == 'workbench.panel.repl.view'"
  },
  {
    "key": "ctrl+alt+f",
    "command": "search.action.openNewEditorToSide"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.revealDefinitionAside"
  },

  {
    "key": "ctrl+enter",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly"
  },
  {
    "key": "ctrl+f11",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationFocus || notificationToastsVisible"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalHasBeenCreated || terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.terminal.resizePaneDown"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+[",
    "command": "editor.action.selectToBracket"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-extension.vim_tab",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+shift+d",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  }
]
